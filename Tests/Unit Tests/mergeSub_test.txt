******************************************************
Test #1:
 
Code:

integer :: A(1)
integer :: B(1)
integer :: C(2)
A = [1]
B = [1]
call mergeSub(A,1,B,1,C,2)
write(*,*) C

Output:           1           1
******************************************************
Test #2:
 
Code:

integer :: A(1)
integer :: B(1)
integer :: C(2)
A = [1]
B = [2]
call mergeSub(A,1,B,1,C,2)
write(*,*) C

Output:           1           2
******************************************************
Test #3:
 
Code:

integer :: A(1)
integer :: B(1)
integer :: C(2)
A = [2]
B = [1]
call mergeSub(A,1,B,1,C,2)
write(*,*) C

Output:           1           2
******************************************************
Test #4:
 
Code:

integer :: A(2)
integer :: B(1)
integer :: C(3)
A = [2,3]
B = [1]
call mergeSub(A,2,B,1,C,3)
write(*,*) C

Output:           1           2           3
******************************************************
Test #5:
 
Code:

integer :: A(2)
integer :: B(1)
integer :: C(3)
A = [0,3]
B = [1]
call mergeSub(A,2,B,1,C,3)
write(*,*) C

Output:           0           1           3
******************************************************
Test #6:
 
Code:

integer :: A(2)
integer :: B(1)
integer :: C(3)
A = [-1,0]
B = [1]
call mergeSub(A,2,B,1,C,3)
write(*,*) C

Output:          -1           0           1
******************************************************
Test #7:
 
Code:

integer :: A(4)
integer :: B(5)
integer :: C(9)
A = [-1,0,5,6]
B = [-2,-1,3,5,7]
call mergeSub(A,4,B,5,C,9)
write(*,*) C

Output:          -2          -1          -1           0           3           5           5           6           7
******************************************************