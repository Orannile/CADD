******************************************************
Test #1:
 
Code:

integer :: j, k
integer :: element, dislnum, bsgn
real(dp) :: x, y, r, s, theta
integer :: matsize(2)
call readDislData('example_disl_test')
matsize = shape(disl(1)%posn)
write(*,*) 'Old'
do j = 1,disl(1)%ndisl
  write(*,*) (disl(1)%posn(k,j), k=1,matsize(1))
end do
element = 3
x = 4.0_dp
y = 5.0_dp
dislnum = 2
theta = 0.577_dp
r = 0.4_dp
s = 0.6_dp
bsgn = -1
call assignDislocation(1,element,x,y,theta,bsgn,r,s,dislnum)
write(*,*) 'New'
do j = 1,disl(1)%ndisl
  write(*,*) (disl(1)%posn(k,j), k=1,matsize(1))
end do
write(*,*) (disl(1)%element(j), j=1,disl(1)%ndisl)

Output:
 Old
   3.0000000000000000        2.0000000000000000        0.0000000000000000     
 -0.20000000000000001       0.50000000000000000        1.0471975499999999     
   1.0000000000000000       0.50000000000000000       -1.0471975499999999     
   0.0000000000000000        0.0000000000000000       0.52359877600000004     
 New
   3.0000000000000000        2.0000000000000000        0.0000000000000000     
   4.0000000000000000        5.0000000000000000       0.57699999999999996     
   1.0000000000000000       0.50000000000000000       -1.0471975499999999     
   0.0000000000000000        0.0000000000000000       0.52359877600000004     
           1           3           3           4
****************************************************** 
Test #2:

Code:

integer :: j, k
integer :: element, dislnum, bsgn
real(dp) :: x, y, r, s, theta
integer :: matsize(2)
call readDislData('example_disl_test')
matsize = shape(disl(1)%posn)
write(*,*) 'Old'
do j = 1,disl(1)%ndisl
  write(*,*) (disl(1)%posn(k,j), k=1,matsize(1))
end do
element = 3
x = 4.0_dp
y = 5.0_dp
dislnum = 6
theta = 0.577_dp
r = 0.4_dp
s = 0.6_dp
bsgn = -1
call assignDislocation(1,element,x,y,theta,bsgn,r,s,dislnum)
write(*,*) 'New'
disl(1)%ndisl = disl(1)%ndisl + 2
do j = 1,disl(1)%ndisl
  write(*,*) (disl(1)%posn(k,j), k=1,matsize(1))
end do
write(*,*) (disl(1)%element(j), j=1,disl(1)%ndisl)

Output: 
 Old
   3.0000000000000000        2.0000000000000000        0.0000000000000000     
 -0.20000000000000001       0.50000000000000000        1.0471975499999999     
   1.0000000000000000       0.50000000000000000       -1.0471975499999999     
   0.0000000000000000        0.0000000000000000       0.52359877600000004     
 New
   3.0000000000000000        2.0000000000000000        0.0000000000000000     
 -0.20000000000000001       0.50000000000000000        1.0471975499999999     
   1.0000000000000000       0.50000000000000000       -1.0471975499999999     
   0.0000000000000000        0.0000000000000000       0.52359877600000004     
   0.0000000000000000        0.0000000000000000        0.0000000000000000     
   4.0000000000000000        5.0000000000000000       0.57699999999999996     
           1           2           3           4           0           3
****************************************************** 
