******************************************************
Test #1:
 
Code:

integer :: A(2,1)
A(:,1) = [0,4]
call mergeSortCols(A,1,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           0
           4
******************************************************
Test #2:
 
Code:

integer :: A(2,2)
A(:,1) = [0,4]
A(:,2) = [1,4]
call mergeSortCols(A,2,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           0           1
           4           4
******************************************************
Test #3:
 
Code:

integer :: A(2,2)
A(:,1) = [0,4]
A(:,2) = [0,3]
call mergeSortCols(A,2,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           0           0
           3           4
******************************************************
Test #4:
 
Code:

integer :: A(2,2)
A(:,1) = [0,4]
A(:,2) = [0,3]
call mergeSortCols(A,2,1,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           0           0
           4           3
******************************************************
Test #5:
 
Code:

integer :: A(2,2)
A(:,1) = [1,4]
A(:,2) = [0,3]
call mergeSortCols(A,2,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           0           1
           3           4
******************************************************
Test #6:
 
Code:

integer :: A(2,9)
A(:,1) = [2,3]
A(:,2) = [2,4]
A(:,3) = [5,6]
A(:,4) = [5,7]
A(:,5) = [6,2]
A(:,6) = [2,2]
A(:,7) = [3,3]
A(:,8) = [6,1]
A(:,9) = [6,2]
call mergeSortCols(A,9,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           2           2           2           3           5           5           6           6           6
           2           3           4           3           6           7           1           2           2
******************************************************
Test #7:
 
Code:

integer :: A(2,9)
A(:,9) = [2,3]
A(:,2) = [2,4]
A(:,3) = [5,6]
A(:,4) = [5,7]
A(:,5) = [6,2]
A(:,6) = [2,2]
A(:,7) = [3,3]
A(:,8) = [6,1]
A(:,1) = [6,2]
call mergeSortCols(A,9,2,2)
call prettyPrintIntMat(A,'A')

Output:
 A
           2           2           2           3           5           5           6           6           6
           2           3           4           3           6           7           1           2           2
******************************************************