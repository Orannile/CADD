******************************************************
Test #1: Base case
 
Code:

real(dp) :: vec(1)
vec = [4.0_dp]
call mergeSortReal(vec,1)
write(*,*) vec 

Output:   4.0000000000000000
******************************************************
Test #2: Base case
 
Code:

real(dp) :: vec(2)
vec = [1.0_dp,4.0_dp]
call mergeSortReal(vec,2)
write(*,*) vec 

Output:   1.0000000000000000        4.0000000000000000
******************************************************
Test #3: Base case
 
Code:

real(dp) :: vec(2)
vec = [4.0_dp,1.0_dp]
call mergeSortReal(vec,2)
write(*,*) vec 

Output:    1.0000000000000000        4.0000000000000000
******************************************************
Test #4: Sorted list
 
Code:

real(dp) :: vec(5)
vec = [1.0_dp,2.0_dp,3.0_dp,4.0_dp,5.0_dp]
call mergeSortReal(vec,5)
write(*,*) vec 

Output:   1.0000000000000000        2.0000000000000000        3.0000000000000000        4.0000000000000000        5.0000000000000000
******************************************************
Test #5:
 
Code:

real(dp) :: vec(5)
vec = [1.0_dp,5.0_dp,4.0_dp,3.0_dp,2.0_dp]
call mergeSortReal(vec,5)
write(*,*) vec 

Output:   1.0000000000000000        2.0000000000000000        3.0000000000000000        4.0000000000000000        5.0000000000000000     
******************************************************
Test #6: Duplicates
 
Code:

real(dp) :: vec(5)
vec = [1.0_dp,5.0_dp,1.0_dp,3.0_dp,2.0_dp]
call mergeSortReal(vec,5)
write(*,*) vec 

Output:   1.0000000000000000        1.0000000000000000        2.0000000000000000        3.0000000000000000        5.0000000000000000 
******************************************************