******************************************************
Test #1: x-displacement
 
Code:

integer :: i, j
real(dp) :: res(11,11)
real(dp) :: x, y
real(dp) :: ux, uy
real(dp) :: mu, nu, burgers
call initMaterialData('example_materials_test2')
mu = 20.0_dp
nu = 0.3_dp
burgers = 2.0_dp
materials(1)%mu = mu
materials(1)%nu = nu
materials(1)%burgers = burgers
materials(1)%dispprefac = 0.25_dp*burgers/(piconst*(1.0_dp-nu))
materials(1)%stressprefac =0.5_dp*burgers*mu/(piconst*(1.0_dp-nu))
do i = 1, 11
x = -10.0_dp + (i - 1.0_dp)*2.0_dp
do j = 1, 11
    y = 10.0_dp - (j - 1.0_dp)*2.0_dp
    call getDispAtPointSub(x,y,1,1,1.0_dp,ux,uy)
    res(j,i) = ux
end do
end do
call prettyPrintMat(res,'Displacement, ux')
  
Output: (Checked with Python module dislfields --- see iPython Notebook 'Dislocation Fields.ipynb')

Displacement, ux
  0.63631789779150338       0.60386734451443336       0.57171313237983945       0.54271749179188022       0.51910907272419482       0.50000000000000000       0.48089092727580524       0.45728250820811983       0.42828686762016055       0.39613265548556670       0.36368210220849667     
  0.67431391946898789       0.63631789779150338       0.59569794657897657       0.55663793588363597       0.52448167051454742       0.50000000000000000       0.47551832948545270       0.44336206411636403       0.40430205342102338       0.36368210220849667       0.32568608053101217     
  0.72767139313457818       0.68603241718070973       0.63631789779150338       0.58222971669546342       0.53420712102446877       0.50000000000000000       0.46579287897553129       0.41777028330453658       0.36368210220849667       0.31396758281929027       0.27232860686542187     
  0.80047960861019340       0.76147070058276933       0.70789563307346581       0.63631789779150338       0.55663793588363597       0.50000000000000000       0.44336206411636403       0.36368210220849667       0.29210436692653419       0.23852929941723061       0.19952039138980662     
  0.89344315634619254       0.86852340975980868       0.82937435632533529       0.76147070058276933       0.63631789779150338       0.50000000000000000       0.36368210220849667       0.23852929941723061       0.17062564367466473       0.13147659024019129       0.10655684365380760     
   1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000        1.0000000000000000                            NaN   0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000        0.0000000000000000     
 -0.89344315634619254      -0.86852340975980868      -0.82937435632533529      -0.76147070058276933      -0.63631789779150338      -0.50000000000000000      -0.36368210220849667      -0.23852929941723061      -0.17062564367466473      -0.13147659024019129      -0.10655684365380760     
 -0.80047960861019340      -0.76147070058276933      -0.70789563307346581      -0.63631789779150338      -0.55663793588363597      -0.50000000000000000      -0.44336206411636403      -0.36368210220849667      -0.29210436692653419      -0.23852929941723061      -0.19952039138980662     
 -0.72767139313457818      -0.68603241718070973      -0.63631789779150338      -0.58222971669546342      -0.53420712102446877      -0.50000000000000000      -0.46579287897553129      -0.41777028330453658      -0.36368210220849667      -0.31396758281929027      -0.27232860686542187     
 -0.67431391946898789      -0.63631789779150338      -0.59569794657897657      -0.55663793588363597      -0.52448167051454742      -0.50000000000000000      -0.47551832948545270      -0.44336206411636403      -0.40430205342102338      -0.36368210220849667      -0.32568608053101217     
 -0.63631789779150338      -0.60386734451443336      -0.57171313237983945      -0.54271749179188022      -0.51910907272419482      -0.50000000000000000      -0.48089092727580524      -0.45728250820811983      -0.42828686762016055      -0.39613265548556670      -0.36368210220849667     

******************************************************
Test #2: y-displacement
 
Code:

integer :: i, j
real(dp) :: res(11,11)
real(dp) :: x, y
real(dp) :: ux, uy
real(dp) :: mu, nu, burgers
call initMaterialData('example_materials_test2')
mu = 20.0_dp
nu = 0.3_dp
burgers = 2.0_dp
materials(1)%mu = mu
materials(1)%nu = nu
materials(1)%burgers = burgers
materials(1)%dispprefac = 0.25_dp*burgers/(piconst*(1.0_dp-nu))
materials(1)%stressprefac =0.5_dp*burgers*mu/(piconst*(1.0_dp-nu))
do i = 1, 11
x = -10.0_dp + (i - 1.0_dp)*2.0_dp
do j = 1, 11
    y = 10.0_dp - (j - 1.0_dp)*2.0_dp
    call getDispAtPointSub(x,y,1,1,1.0_dp,ux,uy)
    res(j,i) = uy
end do
end do
call prettyPrintMat(res,'Displacement, uy')

Output: (Checked with Python module dislfields --- see iPython Notebook 'Dislocation Fields.ipynb')

 Displacement, uy
  -6.4208697449532462E-002  -3.0229961687917160E-002   6.8259310379496438E-003   4.2883117013101241E-002   7.0464521867829144E-002   8.0992776209343018E-002   7.0464521867829144E-002   4.2883117013101241E-002   6.8259310379496438E-003  -3.0229961687917160E-002  -6.4208697449532462E-002
  -8.0139177291647407E-002  -4.3914755043397334E-002  -8.5833738077458898E-004   4.5666906529011918E-002   8.5155579868297679E-002  0.10128671861547814        8.5155579868297679E-002   4.5666906529011918E-002  -8.5833738077458898E-004  -4.3914755043397334E-002  -8.0139177291647407E-002
 -0.10016898868769426       -6.4520314617532729E-002  -1.7751312832184923E-002   4.0770453667478959E-002   9.9922698421090028E-002  0.12745016082669053        9.9922698421090028E-002   4.0770453667478959E-002  -1.7751312832184923E-002  -6.4520314617532729E-002 -0.10016898868769426     
 -0.12175992756472151       -9.0751616121184098E-002  -4.6677317262133859E-002   1.9123987857360275E-002  0.10870564942976951       0.16432546151623575       0.10870564942976951        1.9123987857360275E-002  -4.6677317262133859E-002  -9.0751616121184098E-002 -0.12175992756472151     
 -0.13941012836324165      -0.11545989461728468       -8.1968665112504641E-002  -2.7712873220426495E-002   8.2162730758117877E-002  0.22736420441699334        8.2162730758117877E-002  -2.7712873220426495E-002  -8.1968665112504641E-002 -0.11545989461728468      -0.13941012836324165     
 -0.14637142820765034      -0.12607748580151520       -9.9914043590302815E-002  -6.3038742900757602E-002   0.0000000000000000                            NaN   0.0000000000000000       -6.3038742900757602E-002  -9.9914043590302815E-002 -0.12607748580151520      -0.14637142820765034     
 -0.13941012836324165      -0.11545989461728468       -8.1968665112504641E-002  -2.7712873220426495E-002   8.2162730758117877E-002  0.22736420441699334        8.2162730758117877E-002  -2.7712873220426495E-002  -8.1968665112504641E-002 -0.11545989461728468      -0.13941012836324165     
 -0.12175992756472151       -9.0751616121184098E-002  -4.6677317262133859E-002   1.9123987857360275E-002  0.10870564942976951       0.16432546151623575       0.10870564942976951        1.9123987857360275E-002  -4.6677317262133859E-002  -9.0751616121184098E-002 -0.12175992756472151     
 -0.10016898868769426       -6.4520314617532729E-002  -1.7751312832184923E-002   4.0770453667478959E-002   9.9922698421090028E-002  0.12745016082669053        9.9922698421090028E-002   4.0770453667478959E-002  -1.7751312832184923E-002  -6.4520314617532729E-002 -0.10016898868769426     
  -8.0139177291647407E-002  -4.3914755043397334E-002  -8.5833738077458898E-004   4.5666906529011918E-002   8.5155579868297679E-002  0.10128671861547814        8.5155579868297679E-002   4.5666906529011918E-002  -8.5833738077458898E-004  -4.3914755043397334E-002  -8.0139177291647407E-002
  -6.4208697449532462E-002  -3.0229961687917160E-002   6.8259310379496438E-003   4.2883117013101241E-002   7.0464521867829144E-002   8.0992776209343018E-002   7.0464521867829144E-002   4.2883117013101241E-002   6.8259310379496438E-003  -3.0229961687917160E-002  -6.4208697449532462E-002
