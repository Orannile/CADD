Variables/Arrays:

*************************************************
nodes (structure):
    Contains:
        (Read-in)
        %nnodes (integer)
        %posn (double array):
            Dimensions: nnodes by 7
            Columns: x (current), y (current), z (current), ux (total), uy (total), vx (current), vy (current)
            I.e. X = x - ux, Y = y - uy (X, Y = original coordinates)
        %types (integer array):
            Dimensions: nnodes by 3
            Columns: material, isrelaxed, bcflag
            Code for isrelaxed: -1 = pad
                                0 = continuum (bulk)
                                1 = atom
                                2 = interface
            Code for bcflag: 0 = free
                             1 = u-fixed
                             2 = v-fixed
                             3 = u and v-fixed
            (The bcflag for the interface is just for the atomistic step; in the FE/DD step, the interface atoms are held fixed. So, bcflag for pad = 3?)
            (No force boundary conditions implemented yet)
        (Generated)
        %natoms
        %atomlist (integer array):
            Dimensions: natoms
            Purpose: List of (row) indices that correspond to atoms in %types and %posn arrays
        %nfenodes
        %fenodelist (integer array):
            Dimensions: nfenodes
            Purpose: List of (row) indices that correspond to FE nodes in %types and %posn
            Notes: Includes interface
**************************************************
(Read-in)
feelements (array of structures):
    Dimensions: nfematerials by 1
    feelement (structure)
        Contains:
            %elname (character string)
                Explanation: Uses ABAQUS naming convention 'CPE3', etc. Currently, only 'CPE3' and 'CPE4' are defined/implemented.
            %connect (integer array):
                Dimensions: nel by nnodeel
                Notes: For triangular elements, nnodeel = 3
                Notes: Listed in consistent (counterclockwise) order
**************************************************
(Read-in)
materials (array of structures):
    Dimensions: nmaterials by 1
    material (structure):
        Contains:
            %burgers (double):
                Purpose: Magnitude of burgers vector (using slip plane orientation will give components)
            %disldrag (double):
                Purpose: Dislocation drag coefficient (see van der Giessen
                and Needleman, 1995) --- units of [stress*distance/velocity] = [(force/distance)/velocity] (since third dimension is artificial)
            %elconst (double array):
                Dimensions: 3 by 3 (Voigt notation)
            %lannih (double):
                Purpose: Annihilation distance for dislocations of opposite sign (units of burgers)
            %lnuc (double):
                Purpose: Nucleation distance for dislocation dipole
                Notes: Can be computed using elastic constants, burgers
            %mass (double)
            %mname (character string)

*************************************************
(Read-in)
potentials (array of structures):
    Dimensions: npotentials by 1
    potential (structure):
        Contains:
            %forcecutoff (double) --- r (interatomic separation) at which force is zero
            %pname (character string)
            %pottable (double array)
                Dimensions: npts by 3
                Columns: r (interatomic separation), energy, force
                Notes: Need to be careful about sign convention for force
Notes: Can add more structure fields for more complicated potentials
*************************************************
(Read-in)
groups (array of structures):
    Dimensions: ngroups by 1
    group (structure):
        Contains:
            %gname (character string)
            %members (integer array)
                Dimensions: nmembers by 1
            %nmembers (integer)
*************************************************
(Read-in)
interactions (structure):
    Contains:
        %table (integer array):
            Dimensions: ninteract by 3
            Explanation: Each row is an interaction: 1 2 3 means that atom types 1 and 2 interact through potential 3
        %mat (integer array):
            Dimensions: nmaterials by nmaterials
            Explanation: mat[i,j] gives the number of the potential for interactions between an atom of material i and an atom of material j
*************************************************
(Read-in)
%disls (array of structures):
    Dimensions: nfematerials by 1
    %disl (structure)
    Contains:
        %ndisl (integer):
            Purpose: Current number of dislocations in continuum
        %posn (double array):
            Dimensions: nmaxdisl by 3
            Columns: x, y, orientation (radians)
        %localpos (double array):
            Dimensions: nmaxdisl by 2
            Columns: r, s
            Purpose: Tabulate local coordinates of dislocation in continuum
        %element (integer array):
            Dimensions: nmaxdisl by 1
            Columns: element (number)
        %sgn (integer array)
            Dimensions: nmaxdisl by 1
            Columns: dislocation sign (+1 or -1)
*************************************************
%imagedisl (structure)
Contains:
    %nimagedisl (integer):
        Purpose: Current number of image dislocations
    %posn (double array):
        Dimensions: nmaxdisl by 3
        Columns: x, y, orientation (radians)
    %mnumfe (integer array):
        Dimensions: nmaxdisl by 1
        Columns: mnumfe (number)
    %sgn (integer array)
        Dimensions: nmaxdisl by 1
        Columns: dislocation sign (+1 or -1)
*************************************************
(Read-in)
%damping (structure)
Contains:
    %flag (logical):
        Purpose: Is damping on or off
    %gamma (double):
        Purpose: Damping coefficient
    %gnum (integer):
        Purpose: Group to which damping applies
*************************************************
(Read-in)
%detect (structure)
Contains:
    %passdistance (float):
        Purpose: Max. distance between inner part of detection band and interface
*************************************************
%neighbors (structure):
    Contains:
        (Read-in)
        %check (integer):
        %delay (integer):
            Purpose: Don't rebuild neighbor list until at least delay steps have passed
        %every (integer):
        %skin (double):
            Purpose: See rneigh
        (Generated)
        %neighlist (integer array):
            Dimensions: nrealatoms x nmaxneigh 
            Notes: Is this the best way to allocate the storage?
        %nmaxneigh (integer):
            Purpose: For memory allocation for neighbor list
        %rcut (double):
            Explanation: Largest of all of the force cutoffs for the potentials
        %rneigh (double):
            Purpose: Affects creation/rebuilding of neighbor lists.
                     Atoms within rneigh = rcut + skin are included in list
                     If max(displacement)[1] + max(displacement)[2] (since last rebuild) > skin, rebuild list.
        %rhomax (double): Largest rho for all materials. Used to figure out nmaxneigh
        %possincelastcheck (double array):
            Dimensions: natoms by 2
            Purpose: Positions of all atoms the last time the neighbor array was updated (x_{current} - x_{last} = u, which must be checked against skin distance to see if new neighbor list needs to be generated) 
*************************************************
Obsolete:
    %slipplanes (double array):
        Dimensions: nslipplanes by 6
        Columns: angle (rad), xstart, ystart, xend, yend, length
        Note: ddata%slipplanes(i,1) is like phislp(i) from dd code
    %realatomforces (double array):
        Dimensions: nrealatoms by 2
        Purpose: Forces (fx, fy) on all of the real atoms, computed using pair potential
    %realatomlist (integer array):
        Dimensions: nrealatoms
        Purpose: List of (row) indices that correspond to atoms in %types and %posn arrays
        Notes: Includes interface atoms, not pad atoms
(Read-in)
%obstacles (structure):
    Contains:
        %data (double array):
            Dimensions: nobstacles by 2
            Columns: s (relative coordinate along slip plane), tau (critical stress to break)
        %slipplane (integer array):
            Dimensions: nobstacles
%sources (structure):
    Contains:
        %data (double array):
            Dimensions: nsources x 3
            Columns: s (relative coordinate along slip plane), tau (critical stress to activate),
            tnext (time that next activation is allowed)
        %slipplane (integer array):
            Dimensions: nsources
*************************************************
(Read-in)
misc (atomistics):
    Contains
damping
dumpincrement
elementtype
incrementcurr
increments
restartincrement
timestep

(Generated)
simname

*************************************************
