CADD Algorithm

Subcycle:
    C 1) Atomistic step(s)
        a)  Update neighbors, according to delay/skin/every settings
        b)  Initialize potential and damping forces
        c)  For every increment
            i)  Run verlet
            ii) Update neighbors, if necessary
    C 2) Detect dislocations, pass outwards
    C 3) Solve FE (involves computing boundary conditions using dislocation fields, updated atom positions)
    C 4) Update pad atoms using total displacements (FE + DD)
    C 5) Update dislocations, sources:
        C a)  Sort dislocations on slip planes
        C b)  Compute PK forces on dislocations, corresponding displacements (using suitable integration algorithm)
        C c)  Adjust dislocation displacements if they cross active obstacles
        C d)  Update positions of dislocations on slip plane
        C e)  Annihilate opposite signed dislocations that have crossed
        C f)  Annihilate opposite signed dislocations within Lannih of each other
        C g)  Update dislocation attributes, and remove/pass escaped dislocations
            Posn
            Local pos
            Element
        C h)  Update sources, latent dislocations (increment timer if tau > tau_cr, pop dipole if time > time_cr)
        C i)  Zero dislocation displacements and the computation of shear stresses on obstacles
    C 6) Write output, if necessary
    
DD Algorithm

Subcycle:
    C 1) Solve FE (involves computing boundary conditions using dislocation fields, updated atom positions)
    C 2) Update dislocations, sources:
        C a)  Sort dislocations on slip planes
        C b)  Compute PK forces on dislocations, corresponding displacements (using suitable integration algorithm)
        C c)  Adjust dislocation displacements if they cross active obstacles
        C d)  Update positions of dislocations on slip plane
        C e)  Annihilate opposite signed dislocations that have crossed
        C f)  Annihilate opposite signed dislocations within Lannih of each other
        C g)  Update dislocation attributes, and remove/pass escaped dislocations
            Posn
            Local pos
            Element
        C h)  Update sources, latent dislocations (increment timer if tau > tau_cr, pop dipole if time > time_cr)
        C i)  Zero dislocation displacements and the computation of shear stresses on obstacles
    
Subcycle using functions
    1) solveFE_ptr
    2) runDDStep(dt)
    3) writeDump...

Parameters:

1) FE timestep should be roughly 50 atomistic timesteps corresponding to true dynamics (see Qu paper)...FE timestep is related to Debye frequency. (This is much, much (10^3?) smaller than timestep used in DD only simulations.)
2) Atomistic timestep is 0.002 for true dynamics; 0.02 for damped dynamics
3) So, FE timestep should be roughly 0.1?
4) Other consideration: Dislocation should not be able to cross over detection band. Max dislocation speed is cT = sqrt(mu/rho) = 3.4 in 2D. So, detection band must be at least 3.4*0.1 = 0.34 across (this is very small)
4) Other parameters:

Be careful with:
Misc:
    timestep = 0.02 (damped dynamics) vs. 0.002 (true dynamics)
    increment
Neighbors:
    delay = 0
    every = 0 
    checkdisp = 1
Damping:
    flag = 1
    gamma = 0.05
FE Elements:
    elname = CPE3 or CPE4
Potential:
    Need to adjust for r0 = 1
Materials:
    disldrag =
    lannih = 6b?
    burgers = 1.0
    

    
    
    